[tool.poetry]
name = "IVIM_fit"
version = "0.1.0"
description = "Preprocessing diffusion MRI data and fitting IVIM models"
readme = "README.md"
authors = [
    "Dimuthu <dimuthu@stanford.edu>",
    "Eric Peterson <etpeters@stanford.edu>"
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]

[tool.poetry.dependencies]
python = ">=3.9.0,<3.12"
snakemake = ">=7.20,<8"
snakebids = ">=0.10.2"
pulp = "<2.8.0"
pandas = [
    { version = "<=2.0.3", python = "<=3.9" },
    { version = ">=2.1.1", python = ">=3.12" },
]
dipy = "^1.8.0"
matplotlib = "^3.9.0"
tqdm = "^4.66.4"
joblib = "^1.4.2"

[tool.poetry.scripts]
ivim_fit = "ivim_fit.run:main"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest-console-scripts = "1.2"
pytest = "^7.0.1"
black = "^22.1.0"
pylint = "^2.12.2"
isort = "5.12.0"
poethepoet = "^0.13.1"
pre-commit = "^2.17.0"
snakefmt = "^0.8.0"
yamlfix = "^1.1.0"


[tool.poe.tasks]
setup = "pre-commit install"
yamlfix = { shell = "find . -type f \\( -iname \\*.yaml -o -iname \\*.yml ! -iname snakemake* ! -iname snakebids* \\) -exec yamlfix {} \\;" }
yamlfix-check = { shell = "find . -type f \\( -iname \\*.yaml -o -iname \\*.yml ! -iname snakemake* ! -iname snakebids* \\) -exec yamlfix --check {} \\;" }
isort = "isort --profile black ivim_fit"
isort-check = "isort -c --profile black ivim_fit"
black = "black ivim_fit"
black-check = "black --check ivim_fit"
snakefmt = "snakefmt ivim_fit"
snakefmt-check = "snakefmt --check ivim_fit"
quality = ["yamlfix", "isort", "black", "snakefmt"]
quality-check = [
    "yamlfix-check",
    "isort-check",
    "black-check",
    "snakefmt-check",
]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 79

[tool.black]
line-length = 79

[tool.snakefmt]
line_length = 79
include = '\.smk$|^Snakefile'


[tool.yamlfix]
line_length = 79
none_representation = "null"
section_whitelines = 1
explicit_start = false
sequence_style = "block_style"

