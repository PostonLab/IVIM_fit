# ---- begin snakebids boilerplate ----------------------------------------------

from snakebids import (
    bids,
    filter_list,
    generate_inputs,
    get_wildcard_constraints,
)


configfile: "config/snakebids.yml"


# Workflow setup
include: "rules/setup.smk"
include: "rules/workflowopts.smk"
# Anatomical
include: "rules/anatomical.smk"
include: "rules/diffusion/prepdwi.smk"
include: "rules/diffusion/motioncorr.smk"
include: "rules/diffusion/topup.smk"
include: "rules/diffusion/method_grabber.smk"
include: "rules/diffusion/masking_b0_synthstrip.smk"
include: "rules/diffusion/eddy.smk"
include: "rules/diffusion/reg_dwi_to_t1.smk"
include: "rules/diffusion/synthsr.smk"
include: "rules/diffusion/fitting.smk"


# ---- end snakebids boilerplate ------------------------------------------------
rule all:
    input:
        dtifit=expand(
            bids(
                root=work,
                suffix="dwi.nii.gz",
                datatype="dwi",
                desc="eddy",
                **subj_wildcards
            ),
            zip,
            **subj_zip_list
        ),
        b0=expand(
            bids(
                root=work,
                suffix="b0.nii.gz",
                desc="topup",
                method="jac",
                datatype="dwi",
                **subj_wildcards
            ),
            zip,
            **subj_zip_list
        ),
        b0_mask=expand(
            bids(
                root=work,
                suffix="mask.nii.gz",
                desc="brain",
                method="synthstrip",
                from_="topupb0",
                datatype="dwi",
                **subj_wildcards
            ),
            zip,
            **subj_zip_list
        ),
        fit=expand(
            bids(root=work, suffix="mean-ivimfit.csv", **subj_wildcards),
            zip,
            **subj_zip_list
        ),
        t1_seg=expand(
            bids(
                root=work,
                datatype="anat",
                space="orig",
                label="wholebrain",
                suffix="probseg.nii.gz",
                **subj_wildcards,
            ),
            zip,
            **subj_zip_list,
        ),
        dwi=expand(
            bids(
                root=root,
                suffix="dwi.nii.gz",
                desc="eddy",
                space="T1w",
                res=config["resample_dwi"]["resample_scheme"],
                datatype="dwi",
                **subj_wildcards
            ),
            zip,
            **subj_zip_list
        ),
        avg_n_fitted=expand(
            bids(
                root=work,
                suffix="average_n_fitted_ivim.csv",
                **subj_wildcards
            ),
            zip,
            **subj_zip_list
        ),
